<mxGraphModel dx="0" dy="0" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" background="none" math="0" shadow="0">
  <root>
    <mxCell id="0" />
    <mxCell id="1" parent="0" />
    <mxCell id="node11" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Counter&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Counter(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- cnt: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ reduce(): void&lt;br/&gt;+ isZero(): boolean&lt;br/&gt;+ toString(): String&lt;br/&gt;+ increase(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="541" y="783" width="147" height="171" as="geometry" />
    </mxCell>
    <mxCell id="node10" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Debug&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Debug(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ debug(): void&lt;br/&gt;+ run(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="733" y="783" width="126" height="109" as="geometry" />
    </mxCell>
    <mxCell id="node7" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Distributor&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Distributor(int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- floorNum: int&lt;br/&gt;- elevators: ArrayList&amp;lt;Elevator&amp;gt;&lt;br/&gt;- search: Search&lt;br/&gt;- parameter: Parameter&lt;br/&gt;- indexRotate: int&lt;br/&gt;- requestPool: ArrayList&amp;lt;ArrayList&amp;lt;Entry&amp;gt;&amp;gt;&lt;br/&gt;- CAPACITY: int&lt;br/&gt;- senderCtr: Counter&lt;br/&gt;- ELEVATOR: int&lt;br/&gt;- FLOOR: int&lt;br/&gt;- SWITCH: long&lt;br/&gt;- MOVE: long&lt;br/&gt;- semaphoresN: ArrayList&amp;lt;Semaphore&amp;gt;&lt;br/&gt;- MX: int&lt;br/&gt;- PACK: int&lt;br/&gt;- elevatorInput: ElevatorInput&lt;br/&gt;- transferInfo: HashMap&amp;lt;Integer, Info&amp;gt;&lt;br/&gt;- rotator: Rotator&lt;br/&gt;- elevatorID: ArrayList&amp;lt;Integer&amp;gt;&lt;br/&gt;- LOG: boolean&lt;br/&gt;- requestNum: int&lt;br/&gt;- INITIAL: int&lt;br/&gt;- NX: int&lt;br/&gt;- elevatorNum: int&lt;br/&gt;- accessibility: ArrayList&amp;lt;ArrayList&amp;lt;Boolean&amp;gt;&amp;gt;&lt;br/&gt;- semaphoresM: ArrayList&amp;lt;Semaphore&amp;gt;&lt;br/&gt;- elevatorMaintained: HashMap&amp;lt;Integer, Boolean&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ run(): void&lt;br/&gt;- addPerson(PersonRequest): void&lt;br/&gt;- setMaintain(MaintainRequest): void&lt;br/&gt;- addElevator(ElevatorRequest): void&lt;br/&gt;- distributeRotate(PersonRequest): void&lt;br/&gt;- distribute(PersonRequest, int): void&lt;br/&gt;- close(int): void&lt;br/&gt;- maintain(int): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-220" y="-431" width="335" height="861" as="geometry" />
    </mxCell>
    <mxCell id="node6" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Elevator&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Elevator(int, int, Parameter, ArrayList&amp;lt;Entry&amp;gt;, HashMap&amp;lt;Integer, Info&amp;gt;, ArrayList&amp;lt;Semaphore&amp;gt;, ArrayList&amp;lt;Semaphore&amp;gt;): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- parameter: Parameter&lt;br/&gt;- pos: int&lt;br/&gt;- exit: boolean&lt;br/&gt;- LOG: boolean&lt;br/&gt;- target: int&lt;br/&gt;- inRequests: ArrayList&amp;lt;Entry&amp;gt;&lt;br/&gt;- semaphoresM: ArrayList&amp;lt;Semaphore&amp;gt;&lt;br/&gt;- onlyIn: boolean&lt;br/&gt;- transferInfo: HashMap&amp;lt;Integer, Info&amp;gt;&lt;br/&gt;- floorNum: int&lt;br/&gt;- outRequests: ArrayList&amp;lt;ArrayList&amp;lt;Integer&amp;gt;&amp;gt;&lt;br/&gt;- capacity: int&lt;br/&gt;- maintain: boolean&lt;br/&gt;- innerCnt: int&lt;br/&gt;- semaphoresN: ArrayList&amp;lt;Semaphore&amp;gt;&lt;br/&gt;- opened: boolean&lt;br/&gt;- elevatorID: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- down(): void&lt;br/&gt;- out(): void&lt;br/&gt;- close(): void&lt;br/&gt;- update(): void&lt;br/&gt;- isDisturbed(): boolean&lt;br/&gt;- check(): void&lt;br/&gt;- up(): void&lt;br/&gt;- open(): void&lt;br/&gt;- sharePos(): void&lt;br/&gt;- in(Entry, int, Integer): boolean&lt;br/&gt;- fill(Entry): boolean&lt;br/&gt;+ run(): void&lt;br/&gt;- maintain(): void&lt;br/&gt;- pick(Entry): boolean&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="160" y="-431" width="393" height="769" as="geometry" />
    </mxCell>
    <mxCell id="node1" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Entry&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Entry(int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- num: int&lt;br/&gt;- entry: ArrayList&amp;lt;ArrayList&amp;lt;Integer&amp;gt;&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getNum(): int&lt;br/&gt;+ getRequests(): ArrayList&amp;lt;ArrayList&amp;lt;Integer&amp;gt;&amp;gt;&lt;br/&gt;+ removePassenger(Integer, Integer): void&lt;br/&gt;+ addPassenger(Integer, Integer): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-220" y="783" width="316" height="194" as="geometry" />
    </mxCell>
    <mxCell id="node0" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Info&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Info(int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- cnt: int&lt;br/&gt;- dest: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getDest(): int&lt;br/&gt;+ clear(): void&lt;br/&gt;+ getCnt(): int&lt;br/&gt;+ reduceCnt(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="141" y="783" width="149" height="194" as="geometry" />
    </mxCell>
    <mxCell id="node4" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Main&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Main(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- ELEVATOR: int&lt;br/&gt;- FLOOR: int&lt;br/&gt;- LOG: boolean&lt;br/&gt;- DEBUG: boolean&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ main(String[]): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="335" y="783" width="161" height="171" as="geometry" />
    </mxCell>
    <mxCell id="node9" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Parameter&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Parameter(int, long, long, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- switchTime: long&lt;br/&gt;- moveTime: long&lt;br/&gt;- capacity: int&lt;br/&gt;- initialPos: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getMoveTime(): long&lt;br/&gt;+ getSwitchTime(): long&lt;br/&gt;+ getInitialPos(): int&lt;br/&gt;+ getCapacity(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="634" y="475" width="224" height="240" as="geometry" />
    </mxCell>
    <mxCell id="node8" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Rotator&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Rotator(int, int, HashMap&amp;lt;Integer, Boolean&amp;gt;, ArrayList&amp;lt;ArrayList&amp;lt;Boolean&amp;gt;&amp;gt;): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- index: int&lt;br/&gt;- accessibility: ArrayList&amp;lt;ArrayList&amp;lt;Boolean&amp;gt;&amp;gt;&lt;br/&gt;- packSize: int&lt;br/&gt;- elevatorMaintained: HashMap&amp;lt;Integer, Boolean&amp;gt;&lt;br/&gt;- elevatorNum: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ elevatorNumIncrement(): void&lt;br/&gt;+ next(int): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="903" y="475" width="408" height="217" as="geometry" />
    </mxCell>
    <mxCell id="node2" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Search&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Search(ArrayList&amp;lt;ArrayList&amp;lt;Boolean&amp;gt;&amp;gt;, ArrayList&amp;lt;Elevator&amp;gt;, HashMap&amp;lt;Integer, Boolean&amp;gt;, Rotator): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- accessibility: ArrayList&amp;lt;ArrayList&amp;lt;Boolean&amp;gt;&amp;gt;&lt;br/&gt;- elevatorMaintained: HashMap&amp;lt;Integer, Boolean&amp;gt;&lt;br/&gt;- elevatorNum: int&lt;br/&gt;- floorNum: int&lt;br/&gt;- elevators: ArrayList&amp;lt;Elevator&amp;gt;&lt;br/&gt;- rotator: Rotator&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ search(int, int, int, Stack&amp;lt;SplitRequest&amp;gt;): boolean&lt;br/&gt;- bfs(int, int, int, Stack&amp;lt;SplitRequest&amp;gt;, ArrayList&amp;lt;Boolean&amp;gt;): boolean&lt;br/&gt;- joinStack(int, int, Stack&amp;lt;SplitRequest&amp;gt;, ArrayList&amp;lt;ArrayList&amp;lt;Integer&amp;gt;&amp;gt;, int, Stack&amp;lt;SplitRequest&amp;gt;): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-220" y="475" width="439" height="263" as="geometry" />
    </mxCell>
    <mxCell id="node5" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Sender&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Sender(int, int, Stack&amp;lt;SplitRequest&amp;gt;, ArrayList&amp;lt;ArrayList&amp;lt;Entry&amp;gt;&amp;gt;, HashMap&amp;lt;Integer, Info&amp;gt;, Counter, ArrayList&amp;lt;Integer&amp;gt;, HashMap&amp;lt;Integer, Boolean&amp;gt;, ArrayList&amp;lt;Elevator&amp;gt;, ArrayList&amp;lt;ArrayList&amp;lt;Boolean&amp;gt;&amp;gt;, Rotator): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- dst: int&lt;br/&gt;- search: Search&lt;br/&gt;- LOG: boolean&lt;br/&gt;- accessibility: ArrayList&amp;lt;ArrayList&amp;lt;Boolean&amp;gt;&amp;gt;&lt;br/&gt;- senderCtr: Counter&lt;br/&gt;- remainder: int&lt;br/&gt;- elevatorMaintained: HashMap&amp;lt;Integer, Boolean&amp;gt;&lt;br/&gt;- elevators: ArrayList&amp;lt;Elevator&amp;gt;&lt;br/&gt;- elevatorID: ArrayList&amp;lt;Integer&amp;gt;&lt;br/&gt;- info: Info&lt;br/&gt;- transferInfo: HashMap&amp;lt;Integer, Info&amp;gt;&lt;br/&gt;- passengerId: int&lt;br/&gt;- requestPool: ArrayList&amp;lt;ArrayList&amp;lt;Entry&amp;gt;&amp;gt;&lt;br/&gt;- requestStack: Stack&amp;lt;SplitRequest&amp;gt;&lt;br/&gt;- rotator: Rotator&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- reRun(SplitRequest): boolean&lt;br/&gt;+ run(): void&lt;br/&gt;- distribute(int, int, int, int): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="598" y="-431" width="380" height="470" as="geometry" />
    </mxCell>
    <mxCell id="node3" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;SplitRequest&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ SplitRequest(Integer, Integer, Integer, Integer): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- fromIndex: Integer&lt;br/&gt;- elevatorIndex: Integer&lt;br/&gt;- personId: Integer&lt;br/&gt;- toIndex: Integer&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getFromIndex(): Integer&lt;br/&gt;+ getPersonId(): Integer&lt;br/&gt;+ getToIndex(): Integer&lt;br/&gt;+ getElevatorIndex(): Integer&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="264" y="475" width="325" height="263" as="geometry" />
    </mxCell>
  </root>
</mxGraphModel>